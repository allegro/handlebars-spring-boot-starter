buildscript {
    repositories { mavenCentral() }
    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.2'
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
    }
}
plugins {
    id 'pmd'
    id 'jacoco'
    id 'findbugs'
    id 'codenarc'
    id 'checkstyle'
    id 'maven-publish'
    id 'com.bmuschko.nexus' version '2.3.1'
    id 'nebula.optional-base' version '2.2.2'
    id 'com.github.kt3k.coveralls' version '2.4.0'
    id 'pl.allegro.tech.build.axion-release' version '1.3.4'
}
apply plugin: 'io.codearte.nexus-staging'

scmVersion {
    tag { prefix = project.name }
    versionCreator 'versionWithBranch'
}
project.group = 'pl.allegro.tech.boot'
project.version = scmVersion.version

ext {
    jodaVersion = '2.8'
    spockVersion = '1.0-groovy-2.4'
    handlebarsVersion = '4.0.6'
    springBootVersion = '2.0.0.RELEASE'
}

allprojects {
    repositories {
        mavenCentral()
    }
    apply plugin: 'groovy'
    sourceCompatibility = 1.7
}
dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web:' + springBootVersion,
            'com.github.jknack:handlebars-springmvc:' + handlebarsVersion,
            'com.github.jknack:handlebars-guava-cache:' + handlebarsVersion

    compile 'joda-time:joda-time:' + jodaVersion, optional
    compile 'com.github.jknack:handlebars-helpers:' + handlebarsVersion, optional
    compile 'com.github.jknack:handlebars-humanize:' + handlebarsVersion, optional
    compile 'com.github.jknack:handlebars-markdown:' + handlebarsVersion, optional
    compile 'com.github.jknack:handlebars-jackson2:' + handlebarsVersion, optional
    compile 'org.springframework.boot:spring-boot-configuration-processor:' + springBootVersion, optional

    testCompile 'org.spockframework:spock-core:' + spockVersion,
                'org.spockframework:spock-spring:' + spockVersion,
                'org.springframework.boot:spring-boot-starter-test:' + springBootVersion
}
compileJava.dependsOn(processResources)

task wrapper(type: Wrapper) { gradleVersion = '2.9' }

checkstyle { toolVersion = '6.4.1' }

codenarc {
    toolVersion = '0.23'
    configFile = new File("${projectDir}/config/codenarc/test-rules.groovy")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

nexusStaging {
    packageGroup = 'pl.allegro'
    numberOfRetries = 15
    delayBetweenRetriesInMillis = 5000
}

modifyPom {
    project {
        name 'Spring Boot Starter Handlebars'
        description 'Spring Boot auto-configuration for Handlebars template engine'
        url 'https://github.com/allegro/handlebars-spring-boot-starter'
        inceptionYear '2015'

        scm {
            url 'https://github.com/allegro/handlebars-spring-boot-starter'
            connection 'scm:git@github.com:allegro/handlebars-spring-boot-starter.git'
            developerConnection 'scm:git@github.com:allegro/handlebars-spring-boot-starter.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }

        developers {
            developer {
                id 'plesiecki'
                name 'PaweÅ‚ Lesiecki'
            }
        }

        project.optionalDeps.each { dep ->
            dependencies.find { it.artifactId == dep.name }.optional = true
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
